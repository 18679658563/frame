<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.e8.frame.mapper.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.e8.frame.model.Employee" >
    <result column="id" property="id" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="employee_id" property="employeeId" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="natives" property="natives" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="stat" property="stat" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List">
    id,name,employee_id,sex,birthday,natives,education,email,type,create_time
  </sql>
  <insert id="insert" parameterType="com.e8.frame.model.Employee" >
    insert into t_employee (id, name, employee_id,
      sex, birthday, natives, 
      education, email, type, 
      create_time, stat)
    values (#{id,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{employeeId,jdbcType=VARCHAR}, 
      #{sex,jdbcType=BIT}, #{birthday,jdbcType=TIMESTAMP}, #{natives,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{stat,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.e8.frame.model.Employee" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="natives != null" >
        natives,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="stat != null" >
        stat,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="natives != null" >
        #{natives,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stat != null" >
        #{stat,jdbcType=BIT},
      </if>
    </trim>
  </insert>

  <select id="getEmployeeBypage" resultMap="BaseResultMap">
  select * from t_employee e
   where stat = 1
   <if test="employee.name != null and employee.name != ''">
     and  e.name like concat('%',#{employee.name,jdbcType=VARCHAR},'%')
   </if>
    <if test="employee.employeeId != null and employee.employeeId != ''">
      and  e.employee_Id like  concat('%',#{employee.employeeId,jdbcType=VARCHAR},'%')
    </if>
    <if test="employee.email != null and employee.email != ''">
      and  e.email like concat('%',#{employee.email },'%')
    </if>
    <if test="employee.type != null ">
      and  e.type =#{employee.type }
    </if>
    order by e.create_time desc
    limit #{page.number,jdbcType=INTEGER },#{page.size,jdbcType=INTEGER }
  </select>

  <select id="selectCount" resultType="java.lang.Integer">
    SELECT count(id) from t_employee
  where stat = 1
  </select>

  

  <update id="updateByPrimaryKeySelective" parameterType="com.e8.frame.model.Employee" >
    update t_employee
    <set >
      <if test="name != null" >
       name= #{name,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
       employee_id= #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
       sex=  #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
       birthday= #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="natives != null" >
       natives=#{natives,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
       education= #{education,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
       email= #{email,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
       type =#{type,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
       create_time=#{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stat != null" >
      stat= #{stat,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  
  <update id="updateStatById" >
    update t_employee set stat= 0
    where id =#{id,jdbcType=CHAR}
  </update>

    <select id="getEmployeeById" resultMap="BaseResultMap">
        select * from t_employee
        where id = #{id,jdbcType=CHAR}
    </select>


</mapper>