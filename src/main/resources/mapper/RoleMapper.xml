<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.e8.frame.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.e8.frame.model.Role" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="BaseResultDtoMap" type="com.e8.frame.model.dto.RoleDto" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <collection property="permissions" ofType="com.e8.frame.model.dto.PermissionDto">
      <id property="id" column="id2"/>
      <result column="alias2" property="alias" jdbcType="VARCHAR" />
      <result column="create_time2" property="createTime" jdbcType="TIMESTAMP" />
      <result column="name2" property="name" jdbcType="VARCHAR" />
      <result column="pid2" property="pid" jdbcType="CHAR" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_time, name, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_role
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.e8.frame.model.Role" >
    insert into t_role (id, create_time, name,
      remark)
    values (#{id,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.e8.frame.model.Role" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.e8.frame.model.Role" >
    update t_role
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.e8.frame.model.Role" >
    update t_role
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

  <select id="selectAllRoleInfoByUserId" resultMap="BaseResultMap">
    SELECT
    r.*
    FROM
    t_role r
    LEFT JOIN t_users_roles ru ON ru.role_id = r.id
    WHERE ru.user_id = #{userId}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from t_role
  </select>

  <select id="selectByMenuId" resultMap="BaseResultMap">
      select <include refid="Base_Column_List"/>
        from t_role r join t_menus_roles mr on r.id = mr.role_id
          where mr.menu_id = #{menuId}
  </select>
  <select id="selectByPage" resultMap="BaseResultDtoMap">
    select  r.id,r.create_time,r.name,r.remark,
    p.id as id2,p.alias as alias2,p.create_time as create_time2 ,p.name as name2 ,p.pid as pid2
    from (select * from t_role limit #{page.number},#{page.size}) r  left join t_roles_permissions rp on r.id =  rp.role_id
    left join t_permission  p on rp.permission_id = p.id
    where 1 = 1
    <if test="role.name != null and role.name != '' ">
      and name = #{role.name}
    </if>
    order by create_time
  </select>

  <select id="count" resultType="java.lang.Integer">
    select count(id)
    from t_role r
    where 1 = 1
    <if test="role.name != null and role.name != '' ">
      and r.name = #{role.name}
    </if>
  </select>


  <select id="selectByRoleIds" resultMap="BaseResultDtoMap">
    select  r.id,r.create_time,r.name,r.remark,
    p.id as id2,p.alias as alias2,p.create_time as create_time2 ,p.name as name2 ,p.pid as pid2
    from t_role r left join t_roles_permissions rp on r.id =  rp.role_id
    left join t_permission  p on rp.permission_id = p.id
    where p.id in
    <foreach collection="ids" item="ids" index="index"
             open="(" close=")" separator=",">
      #{ids}
    </foreach>
  </select>

  <delete id="deleteMenuRoleByRoleId" parameterType="java.lang.String">
    delete from t_menus_roles where role_id = #{id,jdbcType=CHAR}
  </delete>

  <delete id="deleteUserRoleByRoleId" parameterType="java.lang.String">
    delete from t_users_roles where role_id = #{id,jdbcType=CHAR}
  </delete>


  <delete id="deleteRolePermissionByRoleId" parameterType="java.lang.String">
    delete from t_roles_permissions where role_id = #{id,jdbcType=CHAR}
  </delete>

<select id="selectMenuRoleByRoleId" resultType="java.lang.Integer" parameterType="java.lang.String">
  select count(r.role_id)
  from t_menus_roles r
  where  r.role_id = #{id,jdbcType=CHAR}

</select>

  <select id="selectUserRoleByRoleId" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(r.role_id)
    from t_users_roles r
    where r.role_id = #{id,jdbcType=CHAR}

  </select>

  <select id="selectRolePermissionByRoleId" resultType="java.lang.Integer" parameterType="java.lang.String">
    select count(r.role_id)
    from t_roles_permissions r
    where r.role_id = #{id,jdbcType=CHAR}

  </select>

  <insert id="insertPermissionRole">
    insert INTO t_roles_permissions(role_id,permission_id) VALUES (#{roleId},#{permissionId})
  </insert>


</mapper>