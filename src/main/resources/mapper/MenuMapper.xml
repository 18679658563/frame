<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.e8.frame.mapper.MenuMapper" >
  <resultMap id="BaseResultMap" type="com.e8.frame.model.Menu" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="iframe" property="iframe" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="component" property="component" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="CHAR" />
    <result column="sort" property="sort" jdbcType="BIGINT" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
  </resultMap>

  <!-- menuDto  -->
  <resultMap id="BaseResultDtoMap" type="com.e8.frame.model.dto.MenuDto" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="iframe" property="iframe" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="component" property="component" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="CHAR" />
    <result column="sort" property="sort" jdbcType="BIGINT" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <collection property="roles" ofType="com.e8.frame.model.dto.RoleDto">
        <id property="id" column="id1"/>
        <result column="create_time1" property="createTime" jdbcType="TIMESTAMP" />
        <result column="name1" property="name" jdbcType="VARCHAR" />
        <result column="remark1" property="remark" jdbcType="VARCHAR" />
      <collection property="permissions" ofType="com.e8.frame.model.dto.PermissionDto">
        <id property="id" column="id2"/>
        <result column="alias2" property="alias" jdbcType="VARCHAR" />
        <result column="create_time2" property="createTime" jdbcType="TIMESTAMP" />
        <result column="name2" property="name" jdbcType="VARCHAR" />
        <result column="pid2" property="pid" jdbcType="CHAR" />
      </collection>
    </collection>
  </resultMap>


  <sql id="Base_Column_List" >
    id, create_time, iFrame, name, component, pid, sort, icon, path
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_menu
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_menu
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.e8.frame.model.Menu" >
    insert into t_menu (id, create_time, iFrame,
      name, component, pid, 
      sort, icon, path)
    values (#{id,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{iframe,jdbcType=BIT}, 
      #{name,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR}, #{pid,jdbcType=CHAR}, 
      #{sort,jdbcType=BIGINT}, #{icon,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.e8.frame.model.Menu" >
    insert into t_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="iframe != null" >
        iFrame,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="component != null" >
        component,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="path != null" >
        path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="iframe != null" >
        #{iframe,jdbcType=BIT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="component != null" >
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=CHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=BIGINT},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.e8.frame.model.Menu" >
    update t_menu
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="iframe != null" >
        iFrame = #{iframe,jdbcType=BIT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="component != null" >
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=CHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=BIGINT},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.e8.frame.model.Menu" >
    update t_menu
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      iFrame = #{iframe,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=CHAR},
      sort = #{sort,jdbcType=BIGINT},
      icon = #{icon,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

  <select id="selectByRoleIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
      from t_menu m
    where m.id in (
        select mr.menu_id
        from t_menus_roles mr
        where mr.role_id in (
        <foreach collection="ids" item="ids" index="index"
                 open="(" close=")" separator=",">
          #{ids}
        </foreach>
        )
    )
  </select>

  <select id="selectByMenu" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from t_menu
      where  1 = 1
      <if test="menu.name != null and menu.name != '' ">
          AND name like #{menu.name}
      </if>

  </select>


  <select id="selectByPid" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from t_menu where pid = #{pid}
  </select>

  <insert id="insertRoleMenu">
      insert into t_menus_roles(role_id,menu_id) values(#{roleId},#{menuId})
  </insert>

  <insert id="insertRoleMenuList">
      insert into t_menus_roles(role_id,menu_id) values
      <foreach collection ="list" item="list" index= "index" separator =",">
       (
          #{list.id}, #{list.menuId}
        )
    </foreach >
  </insert>


  <delete id="deleteMenuRoleByMenuId">
    delete from t_menus_roles where menu_id = #{id}
  </delete>


  <select id="selectByDto" resultType="com.e8.frame.model.dto.MenuDto">
    select m.*,
      GROUP_CONCAT(mr.role_id) as roleIds
        from   t_menu m  left  join    t_menus_roles  mr
            on  m.id = mr.menu_id
    where
    1=1
    <if test="menu.id != null and menu.id != '' ">
      and m.id = #{menu.id}
    </if>
    <if test="menu.name != null and menu.name != '' ">
      AND m.name like #{menu.name}
    </if>
    group by m.id
  </select>
  <select id="selectByMenuDto" resultMap="BaseResultDtoMap">
    select
    m.id,m.create_time,m.iframe,m.name,m.component,m.pid,m.sort,m.icon,m.path,
    r.id as id1,r.create_time as create_time1,r.name as name1,r.remark as remark1,
    p.id as id2,p.alias as alias2,p.create_time as create_time2 ,p.name as name2 ,p.pid as pid2
    from t_menu m left join t_menus_roles mr  ON m.id = mr.menu_id
    left join t_role r on mr.role_id = r.id
    left join t_roles_permissions rp on r.id =  rp.role_id
    left join t_permission  p on rp.permission_id = p.id
    where
    1=1
    <if test="menu.name != null and menu.name != '' ">
      AND m.name like #{menu.name}
    </if>
  </select>

</mapper>